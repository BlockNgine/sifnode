syntax = "proto3";
package sifnode.ethbridge.v1;

import "gogoproto/gogo.proto";
import "sifnode/ethbridge/v1/types.proto";
import "sifnode/oracle/v1/types.proto";
import "sifnode/oracle/v1/network_descriptor.proto";

option go_package = "github.com/Sifchain/sifnode/x/ethbridge/types";

// Query service for queries
service Query {
  // EthProphecy queries an EthProphecy
  rpc EthProphecy(QueryEthProphecyRequest) returns (QueryEthProphecyResponse) {}
  // CrosschainFeeConfig queries crosschain fee config for a network
  rpc CrosschainFeeConfig(QueryCrosschainFeeConfigRequest)
      returns (QueryCrosschainFeeConfigResponse) {}
  // LockBurnNonce query lock burn nonce for a relayer in a network
  rpc LockBurnNonce(QueryLockBurnNonceRequest)
      returns (QueryLockBurnNonceResponse) {}
  // WitnessLockBurnNonce query lock burn nonce for a relayer in a network
  rpc WitnessLockBurnNonce(QueryWitnessLockBurnNonceRequest)
      returns (QueryWitnessLockBurnNonceResponse) {}
}

// QueryEthProphecyRequest payload for EthProphecy rpc query
message QueryEthProphecyRequest { bytes prophecy_id = 1; }

// QueryEthProphecyResponse payload for EthProphecy rpc query
message QueryEthProphecyResponse {
  bytes prophecy_id = 1;
  sifnode.oracle.v1.StatusText status = 2;
  repeated string claim_validators = 3;
}

// QueryCrosschainFeeConfigRequest payload for EthProphecy rpc query
message QueryCrosschainFeeConfigRequest {
  sifnode.oracle.v1.NetworkDescriptor network_descriptor = 1;
}

// QueryCrosschainFeeConfigResponse payload for EthProphecy rpc query
message QueryCrosschainFeeConfigResponse {
  sifnode.oracle.v1.CrossChainFeeConfig crosschain_fee_config = 1;
}

service ProphciesCompletedQueryService {
  // Prophecies Completed Query Service to fetch prophecy info from global nonce
  rpc Search(ProphciesCompletedQueryRequest)
      returns (ProphciesCompletedQueryResponse) {}
}
// ProphciesCompletedQueryRequest payload for ProphciesCompletedQueryRequest rpc
// query
message ProphciesCompletedQueryRequest {
  sifnode.oracle.v1.NetworkDescriptor network_descriptor = 1;
  uint64 global_nonce = 2;
}

// QueryCrosschainFeeConfigResponse payload for ProphciesCompletedQueryResponse
// rpc query response
message ProphciesCompletedQueryResponse {
  repeated sifnode.oracle.v1.ProphecyInfo prophecy_info = 1;
}

// QueryLockBurnNonceRequest payload for LockBurnNonce rpc query
message QueryLockBurnNonceRequest {
  sifnode.oracle.v1.NetworkDescriptor network_descriptor = 1;
  string relayer_val_address = 2;
}

// QueryLockBurnNonceResponse return LockBurnNonce
message QueryLockBurnNonceResponse { uint64 lock_burn_nonce = 1; }

// QueryWitnessLockBurnNonceRequest payload for LockBurnNonce rpc query
message QueryWitnessLockBurnNonceRequest {
  sifnode.oracle.v1.NetworkDescriptor network_descriptor = 1;
  string relayer_val_address = 2;
}

// QueryWitnessLockBurnNonceResponse return WitnessLockBurnNonce
message QueryWitnessLockBurnNonceResponse {
  uint64 witness_lock_burn_nonce = 1;
}
