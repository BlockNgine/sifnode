syntax = "proto3";
package sifnode.ethbridge.v1;

import "gogoproto/gogo.proto";
import "sifnode/oracle/v1/network_descriptor.proto";

option go_package = "github.com/Sifchain/sifnode/x/ethbridge/types";

// EthBridgeClaim is a structure that contains all the data for a particular
// bridge claim
message EthBridgeClaim {
  sifnode.oracle.v1.NetworkDescriptor network_descriptor = 1
      [ (gogoproto.moretags) = "yaml:\"network_descriptor\"" ];
  // bridge_contract_address is an EthereumAddress
  string bridge_contract_address = 2
      [ (gogoproto.moretags) = "yaml:\"bridge_contract_address\"" ];
  int64 nonce = 3 [ (gogoproto.moretags) = "yaml:\"nonce\"" ];
  string symbol = 4 [ (gogoproto.moretags) = "yaml:\"symbol\"" ];
  // token_contract_address is an EthereumAddress
  string token_contract_address = 5
      [ (gogoproto.moretags) = "yaml:\"token_contract_address\"" ];
  // ethereum_sender is an EthereumAddress
  string ethereum_sender = 6
      [ (gogoproto.moretags) = "yaml:\"ethereum_sender\"" ];
  // cosmos_receiver is an sdk.AccAddress
  string cosmos_receiver = 7
      [ (gogoproto.moretags) = "yaml:\"cosmos_receiver\"" ];
  // validator_address is an sdk.ValAddress
  string validator_address = 8
      [ (gogoproto.moretags) = "yaml:\"validator_address\"" ];
  string amount = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"amount\""
  ];
  ClaimType claim_type = 10;
  // Name of coin different then symbol
  string token_name = 11 [ (gogoproto.moretags) = "yaml:\"token_name\"" ];
  // Number of decimals in ERC20 token
  int32 decimals = 12 [ (gogoproto.moretags) = "yaml:\"token_decimals\"" ];
}

message PeggyTokens { repeated string tokens = 1; }

// Claim type enum
enum ClaimType {
  // Unspecified claim type
  CLAIM_TYPE_UNSPECIFIED = 0;
  // Burn claim type
  CLAIM_TYPE_BURN = 1;
  // Lock claim type
  CLAIM_TYPE_LOCK = 2;
}

// GenesisState for ethbridge
message GenesisState {
  string crosschain_fee_receive_account = 1;
  repeated string peggy_tokens = 2;
}
